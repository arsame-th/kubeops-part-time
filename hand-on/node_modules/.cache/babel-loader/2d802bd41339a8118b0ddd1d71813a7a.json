{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arsam\\\\Desktop\\\\node js lambda\\\\src\\\\DeleteTodo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport { getTodo, deleteTodo } from \"./api\";\nexport const DeleteTodo = () => {\n  const match = useRouteMatch();\n  const [todo, setTodo] = useState();\n  useEffect(() => {\n    const fetchTodo = async () => {\n      const todo = await getTodo(match.params.id);\n      setTodo(todo);\n    };\n\n    fetchTodo();\n  }, [match]);\n  return todo ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Loading...\");\n};","map":{"version":3,"sources":["C:/Users/arsam/Desktop/node js lambda/src/DeleteTodo.js"],"names":["React","useState","useEffect","useRouteMatch","useHistory","getTodo","deleteTodo","DeleteTodo","match","todo","setTodo","fetchTodo","params","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAMC,KAAK,GAAGL,aAAa,EAA3B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,YAAMF,IAAI,GAAG,MAAMJ,OAAO,CAACG,KAAK,CAACI,MAAN,CAAaC,EAAd,CAA1B;AACAH,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAHD;;AAIAE,IAAAA,SAAS;AAEV,GAPQ,EAON,CAACH,KAAD,CAPM,CAAT;AASA,SAAOC,IAAI,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,gBAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAKD,CAnBM","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { getTodo, deleteTodo } from \"./api\";\r\n\r\nexport const DeleteTodo = () => {\r\n  const match = useRouteMatch()\r\n  const [todo, setTodo] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTodo = async () => {\r\n      const todo = await getTodo(match.params.id)\r\n      setTodo(todo)\r\n    }\r\n    fetchTodo()\r\n\r\n  }, [match]);\r\n\r\n  return todo ? (\r\n    <div></div>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}