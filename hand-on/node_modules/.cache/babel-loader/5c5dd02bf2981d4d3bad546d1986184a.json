{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\arsam\\\\Desktop\\\\node js lambda\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\arsam\\\\Desktop\\\\node js lambda\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\arsam\\\\Desktop\\\\node js lambda\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{TodoForm}from\"./TodoForm\";import{useRouteMatch,useHistory}from\"react-router-dom\";import{getTodo,updateTodo}from\"./api\";import{SpinnerBig}from\"./Spinner\";export var EditTodo=function EditTodo(){var match=useRouteMatch();var _useState=useState(),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodo=_useState2[1];var history=useHistory();useEffect(function(){var fetchTodo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var todo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getTodo(match.params.id);case 2:todo=_context.sent;setTodo(todo);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchTodo(){return _ref.apply(this,arguments);};}();fetchTodo();},[match]);var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return updateTodo(data,match.params.id);case 2:history.push(\"/\");case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();return todo?/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mt-3\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Edit Todo Item\"),/*#__PURE__*/React.createElement(TodoForm,{todo:todo,onSubmit:onSubmit}))):/*#__PURE__*/React.createElement(SpinnerBig,null);};","map":{"version":3,"sources":["C:/Users/arsam/Desktop/node js lambda/src/EditTodo.js"],"names":["React","useState","useEffect","TodoForm","useRouteMatch","useHistory","getTodo","updateTodo","SpinnerBig","EditTodo","match","todo","setTodo","history","fetchTodo","params","id","onSubmit","data","push"],"mappings":"0XAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,aAAT,CAAwBC,UAAxB,KAA0C,kBAA1C,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,OAApC,CACA,OAASC,UAAT,KAA2B,WAA3B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC5B,GAAMC,CAAAA,KAAK,CAAGN,aAAa,EAA3B,CAD4B,cAEJH,QAAQ,EAFJ,wCAErBU,IAFqB,eAEfC,OAFe,eAG5B,GAAMC,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CAGAH,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,SAAS,0FAAG,kKACGR,CAAAA,OAAO,CAACI,KAAK,CAACK,MAAN,CAAaC,EAAd,CADV,QACVL,IADU,eAEhBC,OAAO,CAACD,IAAD,CAAP,CAFgB,sDAAH,kBAATG,CAAAA,SAAS,0CAAf,CAIAA,SAAS,GAEV,CAPQ,CAON,CAACJ,KAAD,CAPM,CAAT,CASA,GAAMO,CAAAA,QAAQ,2FAAG,kBAAOC,IAAP,6IACTX,CAAAA,UAAU,CAACW,IAAD,CAAOR,KAAK,CAACK,MAAN,CAAaC,EAApB,CADD,QAEfH,OAAO,CAACM,IAAR,CAAa,GAAb,EAFe,wDAAH,kBAARF,CAAAA,QAAQ,6CAAd,CAKA,MAAON,CAAAA,IAAI,cACT,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,MAAf,eACE,+CADF,cAEE,oBAAC,QAAD,EAAU,IAAI,CAAEA,IAAhB,CAAsB,QAAQ,CAAEM,QAAhC,EAFF,CADF,CADS,cAQT,oBAAC,UAAD,MARF,CAUD,CA9BM","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { TodoForm } from \"./TodoForm\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { getTodo, updateTodo } from \"./api\";\r\nimport { SpinnerBig } from \"./Spinner\"\r\n\r\nexport const EditTodo = () => {\r\n  const match = useRouteMatch()\r\n  const [todo, setTodo] = useState();\r\n  const history = useHistory()\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTodo = async () => {\r\n      const todo = await getTodo(match.params.id)\r\n      setTodo(todo)\r\n    }\r\n    fetchTodo()\r\n\r\n  }, [match]);\r\n\r\n  const onSubmit = async (data) => {\r\n    await updateTodo(data, match.params.id)\r\n    history.push(\"/\")\r\n  }\r\n\r\n  return todo ? (\r\n    <div className=\"container\">\r\n      <div className=\"mt-3\">\r\n        <h3>Edit Todo Item</h3>\r\n        <TodoForm todo={todo} onSubmit={onSubmit}/>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <SpinnerBig/>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}