{"ast":null,"code":"export const getTodos = () => fetch(window.location.origin + \"/\").then((err, res) => {\n  if (err) {\n    console.log(err);\n  } else {\n    res.json();\n  }\n});\nexport const createTodo = todo => fetch(\"http://localhost:4000/create\", {\n  method: \"POST\",\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify(todo)\n});\nexport const updateTodo = (todo, id) => fetch(`http://localhost:4000/${id}`, {\n  method: \"POST\",\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify(todo)\n});\nexport const getTodo = id => fetch(`http://localhost:4000/${id}`).then(res => res.json());","map":{"version":3,"sources":["C:/Users/arsam/Desktop/node js lambda/src/api.js"],"names":["getTodos","fetch","window","location","origin","then","err","res","console","log","json","createTodo","todo","method","headers","body","JSON","stringify","updateTodo","id","getTodo"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,MAAMC,KAAK,CAACC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,GAA1B,CAAL,CAAoCC,IAApC,CAA0C,CAACC,GAAD,EAAKC,GAAL,KAAa;AACnF,MAAGD,GAAH,EAAO;AACLE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,GAFD,MAEO;AACLC,IAAAA,GAAG,CAACG,IAAJ;AACD;AACF,CAN6B,CAAvB;AAQP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAUX,KAAK,CAAC,8BAAD,EAAiC;AACxEY,EAAAA,MAAM,EAAE,MADgE;AAExEC,EAAAA,OAAO,EAAE;AACP,cAAU,kBADH;AAEP,oBAAgB;AAFT,GAF+D;AAMxEC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANkE,CAAjC,CAAlC;AASP,OAAO,MAAMM,UAAU,GAAG,CAACN,IAAD,EAAOO,EAAP,KAAclB,KAAK,CAAE,yBAAwBkB,EAAG,EAA7B,EAAgC;AAC3EN,EAAAA,MAAM,EAAE,MADmE;AAE3EC,EAAAA,OAAO,EAAE;AACP,cAAU,kBADH;AAEP,oBAAgB;AAFT,GAFkE;AAM3EC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANqE,CAAhC,CAAtC;AASP,OAAO,MAAMQ,OAAO,GAAID,EAAD,IAAQlB,KAAK,CAAE,yBAAwBkB,EAAG,EAA7B,CAAL,CAAqCd,IAArC,CAA0CE,GAAG,IAAIA,GAAG,CAACG,IAAJ,EAAjD,CAAxB","sourcesContent":["export const getTodos = () => fetch(window.location.origin + \"/\").then( (err,res) => {\r\n  if(err){\r\n    console.log(err)\r\n  } else {\r\n    res.json()\r\n  } \r\n});\r\n\r\nexport const createTodo = (todo) => fetch(\"http://localhost:4000/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const updateTodo = (todo, id) => fetch(`http://localhost:4000/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const getTodo = (id) => fetch(`http://localhost:4000/${id}`).then(res => res.json())"]},"metadata":{},"sourceType":"module"}